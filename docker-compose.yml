version: '3.7'

networks:
  default:
    driver: bridge

volumes:
  db-data:

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: docker.nginx.Dockerfile
      args:
        SERVER_URL: ${NGINX_SERVER_URL:-http://server/}
        CLIENT_URL: ${NGINX_CLIENT_URL:-http://client/}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
      - client
    networks:
      - default

  database:
    container_name: database
    image: postgres:15-alpine3.17
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-postgres}
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d:rwx

  server:
    container_name: server
    build:
      context: .
      dockerfile: docker.server.Dockerfile
      args:
        NODE_ENV: development
    depends_on:
      - database
    environment:
      RUST_LOG: ${SERVER_RUST_LOG:-}
      APP_DB_CONNECTION_STRING: ${SERVER_DB_CONNECTION_STRING:-postgres://postgres:postgres@database:5432/postgres}
    ports:
      - "8081:80"
    networks:
      - default

  client:
    container_name: client
    build:
      context: .
      dockerfile: docker.client.Dockerfile
      args:
        BUILD_ARGS: ${CLIENT_BUILD_ARGS}
        API_BASE_URL: ${CLIENT_API_BASE_URL}
        API_AUTH_URL: ${CLIENT_API_AUTH_URL}
    ports:
      - "8080:80"
    networks:
      - default
